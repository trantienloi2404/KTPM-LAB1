apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: microservices-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: tranductung0701/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        # Note: Add these environment variables as needed
        # - name: REACT_APP_CLOUDINARY_CLOUD_NAME
        #   value: "your-cloudinary-cloud-name"
        # - name: REACT_APP_FIREBASE_AUTH_DOMAIN
        #   value: "your-firebase-auth-domain"
        # - name: REACT_APP_FIREBASE_PROJECT_ID
        #   value: "your-firebase-project-id"
        # - name: REACT_APP_FIREBASE_STORAGE_BUCKET
        #   value: "your-firebase-storage-bucket"
        # - name: REACT_APP_FIREBASE_MESSAGING_SENDER_ID
        #   value: "your-firebase-messaging-sender-id"
        # - name: REACT_APP_FIREBASE_APP_ID
        #   value: "your-firebase-app-id"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: microservices-app
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: microservices-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: microservices-app.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80 